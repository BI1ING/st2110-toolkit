#!/bin/bash

usage()
{
    echo "$0 is a wrapper script that manages EBU-LIST
and related sub-services (DB, backend, UI, etc.)
Usage:
    $0 {start|stop|status|log|install|upgrade|dev}
        start    start docker containers and server
        stop     stop docker containers and server
        status   check the status of all the st 2110 services
        log      get the logs of the server+containers
        install  install EBU-LIST for the first time
        upgrade  upgrade to next stable version fron public Github
        dev      upgrade to the next release from private repo
" >&2
}

log_ebu_list()
{
    logger -t "st2110-ebulist" "$@"
}

ST2110_CONF_FILE=/etc/st2110.conf
if [ -f $ST2110_CONF_FILE ]; then
    . $ST2110_CONF_FILE
fi

if [ -z $LIST_PATH -o -z $ST2110_USER ]; then
    log_ebu_list "Missing param LIST_PATH or ST2110_USER..."
    exit 1
fi

path=$(pwd)

get_status()
{
    if $2 2>&1 | grep -q "$3"; then
        ret="UP"
    else
        ret="DOWN"
    fi
    printf  "%-30.30s: %s\n" "$1" "$ret"
}

start()
{
    if get_status "LIST *" "$0 status" "LIST.*UP" | grep -q UP; then
        echo "EBU-LIST is already up"
        return
    fi

    IP=$(ip addr show $MGMT_IFACE | tr -s ' ' | sed -n 's/ inet \(.*\)\/.*/\1/p')
    if ! ping -W 1 -c 1 -q $IP > /dev/null; then
        log_ebu_list "Couln't ping $IP for interface $MGMT_IFACE, exit."
        exit 1
    fi

    if [ $LIST_DEV = "true" ]; then
        log_ebu_list "Start containers: mongo, influxdb and rabbitmq"
        cd $LIST_PATH/apps/external/
        docker-compose up -d

        log_ebu_list "Start the UI"
        cd $LIST_PATH/apps/gui/
        npm start 2>&1 > /tmp/list-gui.log &

        log_ebu_list "Start the server"
        cd $LIST_PATH/apps/listwebserver
        sed -i "s,\(folder:\).*,\1 $LIST_DATA_FOLDER,;
            s,\(cpp:\).*,\1 $LIST_PATH/build/bin,;
            s,\(webappDomain:\).*,\1 http://$IP:8080,;
            " ./config.yml
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$LIST_PATH/build/lib/
        npm run dev -- config.yml --dev --live 2>&1 > /tmp/list-server.log &
    else
        cd $LIST_PATH
        sed -i "s,\(.*EBU_LIST_LIVE_MODE=\).*,\1true,;
            s,\(.*EBU_LIST_WEB_APP_DOMAIN=\).*,\1 http://$IP:8080,;
            "  ./docker-compose.yml
        log_ebu_list "Start containers: mongo, influxdb, rabbitmq and EBU-LIST"
        docker-compose up -d
    fi
}

stop()
{
    if [ $LIST_DEV = "true" ]; then
        killall -9 node
        cd $LIST_PATH/apps/external/
        docker-compose stop # 'down' may break the DBs
    else
        cd $LIST_PATH
        docker-compose stop # 'down' may break the DBs
    fi
    echo "You may need to 'sudo service docker restart' before starting EBU-LIST again (if Mongo DB doesn't respond)."
}

status()
{
    media_ip=$(ip addr show $MEDIA_IFACE | tr -s ' ' | sed -n 's/ inet \(.*\)\/.*/\1/p')
    mgt_ip=$(ip addr show $MGMT_IFACE | tr -s ' ' | sed -n 's/ inet \(.*\)\/.*/\1/p')
    filter="src host $media_ip && dst host 224.0.1.129"

    echo "-----------------------------------------------"
    echo "                EBU-LIST Status"
    echo "-----------------------------------------------"
    printf  "%-30.30s: %-15.15s %s\n" "MGT INTERFACE" "$MGMT_IFACE" "$mgt_ip"
    printf  "%-30.30s: %-15.15s %s\n" "MEDIA INTERFACE" "$MEDIA_IFACE" "$media_ip"
    get_status "Media interface" "ip addr show $MEDIA_IFACE" "$MEDIA_IFACE: .* UP"
    get_status "Mellanox Software" "find /dev/mst/" "/dev/mst/mt.*_pciconf."
    get_status "Ptp for Linux daemon" "ps aux" "[p]tp4l"
    get_status "Ptp to NIC" "ps aux" "[p]hc2sys"
    get_status "Ptp lock" "journalctl -n10" "phc2sys.* s2 freq "
    get_status "Ptp traffic" "timeout 2 tcpdump -i $MEDIA_IFACE -c2 $filter" "2 packets captured"
    get_status "Docker daemon" "ps aux" "[d]ockerd"
    get_status "Docker network" "ping -c 1 -W 1 172.17.0.1" "1 received"
    get_status "Mongo DB" "docker ps" "mongo"
    get_status "Influx DB" "docker ps" "influxdb"
    get_status "Rabbit MQ" "docker ps" "rabbitmq"
    if [ $LIST_DEV = "true" ]; then
        get_status "LIST server" "ps aux" "[n]ode server.js .*--live"
        get_status "LIST gui" "ps aux" "[n]ode .*gui"
    else
        get_status "LIST server and UI" "docker ps" "pi-list"
    fi
    get_status "LIST server port" "netstat -laputen" ":::3030.*LISTEN"
    get_status "LIST gui port" "netstat -laputen" ":::8080.*LISTEN"
    get_status "LIST capture" "ps aux" "[c]aptured"
}

log()
{
    if [ $LIST_DEV == "true" ]; then
        tail -f -n200 /tmp/list*.log
    else
        tail -f -n200 /tmp/list*.log &
        cd $LIST_PATH
        docker-compose logs -f --tail=500
        killall tail
    fi
}

install()
{
    set -eux

    if [ $LIST_DEV = "true" ]; then
        cd ~
        git clone https://github.com/ebu/pi-list.git $LIST_DIR
        cd $LIST_DATA
        git submodule update --init --recursive
        sudo ./scripts/setup_build_env.sh
        ./scripts/deploy/deploy.sh
    else
        mkdir $LIST_PATH
        cd $LIST_PATH
        curl -O https://raw.githubusercontent.com/ebu/pi-list/master/docs/docker-compose.yml
    fi

    set +eux
}

upgrade()
{
    stop

    repo=$1
    branch=$2

    cd $LIST_PATH
    git status
    echo "Local changes will be deleted:"
    echo "Do you really want to upgrade EBU-LIST from repo $repo/$branch? [y/n]"
    read y
    if [ $y != "y" ]; then
        echo "Abort."
        exit
    fi

    set -eux

    git reset --hard
    git checkout $branch
    git pull $repo $branch
    git submodule update --init --recursive

    ./scripts/deploy/deploy.sh

    set +eux

    start
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    log)
        log
        ;;
    upgrade)
        upgrade origin master
        ;;
    dev)
        # upgrade <remote> <branch>
        upgrade devops release
        ;;
    install)
        install
        ;;
    *)
        usage
        exit 1
        ;;
esac

cd $path

exit 0
